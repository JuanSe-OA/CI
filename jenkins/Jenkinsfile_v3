pipeline {
    agent any

    tools {
        maven "MAVEN_HOME"
    }

    stages {
        stage('Clone') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    git branch: 'main', url: 'https://github.com/Sebasjc19/java-edu.git'
                }
            }
        }

        stage('Build') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    sh "mvn -DskipTests clean package -f java-edu/pom.xml"
                }
            }
        }

        stage('Test') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    sh "mvn clean install -f java-edu/pom.xml"
                }
            }
        }

        stage('Sonar') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    withSonarQubeEnv('sonarqube') {
                        sh "mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar -f java-edu/pom.xml"
                    }
                }
            }
        }

        stage('Quality gate') {
            steps {
                sleep(10)
                timeout(time: 2, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Deploy') {
            steps {
                echo "mvn spring-boot:run -f java-edu/pom.xml"
            }
        }
    }
}
